% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/make_datapkg_RAM.R
\name{make_datapkg_RAM}
\alias{make_datapkg_RAM}
\title{make_datapkg_RAM: Imports and compiles views for wetland RAM data package}
\usage{
make_datapkg_RAM(
  export_protected = FALSE,
  type = c("DSN", "file"),
  odbc = "RAM_BE",
  db_path = NA,
  new_env = TRUE,
  export_data = FALSE,
  export_path = NA,
  zip = FALSE
)
}
\arguments{
\item{export_protected}{Logical. If TRUE, all records are exported. If FALSE (Default), only non-protected
species are exported.}

\item{type}{Select whether to use the default Data Source Named database (DSN) to import data or a
different database.
If "DSN" is selected, must specify name in odbc argument.
\describe{
\item{"DSN"}{Default. DSN database. If odbc argument is not specified, will default to "RAM_BE"}
\item{"file"}{A different database than default DSN}
}}

\item{odbc}{DSN of the database when using type = DSN. If not specified will default to "RAM_BE", which
is the back end of the MS Access RAM database.}

\item{db_path}{Quoted path of database back end file, including the name of the backend.}

\item{new_env}{Logical. Specifies which environment to store views in. If \code{TRUE}(Default), stores
views in VIEWS_RAM environment. If \code{FALSE}, stores views in global environment}

\item{export_data}{Logical. If TRUE, writes views to disk. If FALSE (Default), views are only
stored in specified R environment.}

\item{export_path}{Quoted path to export views to. If blank, exports to working directory.}

\item{zip}{Logical. If TRUE, exports a zip file. If FALSE (Default), exports individual csvs.}
}
\value{
Assigns RAM views to specified environment
}
\description{
This function imports RAM-related tables in the wetland RAM backend and combines them
into flattened views for the data package. Each view is added to a VIEWS_RAM environment in your
workspace, or to your global environment based on whether new_env = TRUE or FALSE.
}
\examples{
\dontrun{
# Import tables from database in specific folder:
make_datapkg_RAM(type = 'file', path = './Data/NETN_RAM_Backend.mdb')

# Import ODBC named database into global env with protected species
make_datapkg_RAM(type = 'DSN', odbc = "RAM_BE", new_env = F, export_protected = T)
}

}
